# -*- coding: utf-8 -*-
"""support_vector_machine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xaa7yJQt5vmdI4SdkjMsm-qfOmcZyLT5
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np 

from google.colab import drive
drive.mount("/content/drive/")

data = pd.read_csv("/content/drive/MyDrive/data.csv")

data.head()

data.info()

data.drop(["Unnamed: 32","id"],axis=1, inplace=True)

M = data[data.diagnosis=="M"]
B = data[data.diagnosis=="B"]

plt.scatter(M.radius_mean,M.texture_mean,color="red",label="malignant") 
plt.scatter(B.radius_mean,B.texture_mean,color="green",label="benign")
plt.xlabel("radius_mean")
plt.ylabel("texture_mean")
plt.legend()
plt.show()

data.diagnosis = [1 if each=="M" else 0 for each in data.diagnosis] 

y = data.diagnosis.values 
x_data = data.drop(["diagnosis"],axis=1)

x = (x_data - np.min(x_data))/(np.max(x_data)-np.min(x_data))

x.head()

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3,random_state=1)

from sklearn.svm import SVC
svc= SVC(random_state=42)
svc.fit(x_train,y_train)

svc.score(x_test,y_test)

train_accuracy = []
test_accuracy = []
for i in range(1,100):
    svm = SVC(C=i)
    svm.fit(x_train,y_train)
    train_accuracy.append(svm.score(x_train,y_train))
    test_accuracy.append(svm.score(x_test,y_test))
    
plt.plot(range(1,100),train_accuracy,label="training accuracy")
plt.plot(range(1,100),test_accuracy,label="testing accuracy")
plt.legend()
plt.xlabel("C values")
plt.ylabel("Accuracy")
plt.grid()
plt.show()

print("Best accuracy is {} when C = {}".format(np.max(test_accuracy),1+test_accuracy.index(np.max(test_accuracy))))